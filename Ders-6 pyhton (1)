{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMkKS2PX3dxdF5OSxFw8Spd"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WANMRe_4hzkp","executionInfo":{"status":"ok","timestamp":1724656466017,"user_tz":-180,"elapsed":4,"user":{"displayName":"ROJG�L ACIBUCA","userId":"11810552767955716186"}},"outputId":"6b6b2f82-f8ec-4202-c6ab-9e618d6482e8"},"outputs":[{"output_type":"stream","name":"stdout","text":["Merhaba, İGÜ - İSTKA / Ders 6\n"]}],"source":["print(\"Merhaba, İGÜ - İSTKA / Ders 6\")"]},{"cell_type":"code","source":["import sys # import python programlama dilinde yazılıma kütüphane eklemeye yarayan bir kod blogudur.\n","print(sys.version)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6CV3dcjLiO59","executionInfo":{"status":"ok","timestamp":1724656515113,"user_tz":-180,"elapsed":311,"user":{"displayName":"ROJG�L ACIBUCA","userId":"11810552767955716186"}},"outputId":"9e10fec9-bcca-4f85-d145-e5266b95fd0c"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["3.10.12 (main, Jul 29 2024, 16:56:48) [GCC 11.4.0]\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sMaLSMlZiTul","executionInfo":{"status":"ok","timestamp":1724656569980,"user_tz":-180,"elapsed":17932,"user":{"displayName":"ROJG�L ACIBUCA","userId":"11810552767955716186"}},"outputId":"388d73f8-39c3-4022-fefd-e80d0601b4de"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["import os\n","os.chdir('/content/drive/My Drive/veriyapilari.istka')"],"metadata":{"id":"EBpMNlLZioK4","executionInfo":{"status":"ok","timestamp":1724656629557,"user_tz":-180,"elapsed":335,"user":{"displayName":"ROJG�L ACIBUCA","userId":"11810552767955716186"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["#Liste tanımlama\n","dizi=[2,3,5,6,8,11,14]\n","#Çift sayıları tutmak için boş liste\n","numaralistesi=[]\n","#For ve if ile çift sayıları bulma\n","for i in dizi :\n","  if i %2 == 0:\n","    numaralistesi.append(i)\n","print(f\"Listede bulunan çift sayilar{numaralistesi}\")\n","print(\"Adet çift sayi\", len (numaralistesi) ,\"bulunmaktadir!!!\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7AfRAywRi6Cf","executionInfo":{"status":"ok","timestamp":1724657447703,"user_tz":-180,"elapsed":312,"user":{"displayName":"ROJG�L ACIBUCA","userId":"11810552767955716186"}},"outputId":"9cf614e8-ca0d-469a-e406-c22beeb487ce"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Listede bulunan çift sayilar[2, 6, 8, 14]\n","Adet çift sayi 4 bulunmaktadir!!!\n"]}]},{"cell_type":"code","source":["Dizi=[\"elma\",\"cilek\",\"muz\",\"su\",\"cikolata\"]#Malzeme Listsi\n","aranacak_urun =\"muz\" # Aranacak eleman\n","if aranacak_urun in Dizi:\n","  print(aranacak_urun,\"Liste icerisinde mevcut.\")\n","else:\n","  print(aranacak_urun, \"liste icerisinde mevcut degil.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zQQKsfMOmD25","executionInfo":{"status":"ok","timestamp":1724658213984,"user_tz":-180,"elapsed":345,"user":{"displayName":"ROJG�L ACIBUCA","userId":"11810552767955716186"}},"outputId":"25063e37-e853-4946-86f3-753ad583746c"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["muz Liste icerisinde mevcut.\n"]}]},{"cell_type":"code","source":["Dizi=[\"elma\",\"cilek\",\"muz\",\"su\",\"cikolata\"]\n","aranacak_urun= input(\"Aranacak urun nedir?\")\n","if aranacak_urun in Dizi:\n","  print(aranacak_urun,\"Liste icerisinde mevcut\")\n","else:\n","  print(aranacak_urun,\"Liste icerisinde mevcut değil\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ho2IhewGnYzb","executionInfo":{"status":"ok","timestamp":1724658202436,"user_tz":-180,"elapsed":10078,"user":{"displayName":"ROJG�L ACIBUCA","userId":"11810552767955716186"}},"outputId":"c835a6fb-1f41-4333-a8ae-bc27424854a8"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Aranacak urun nedir?cikolata\n","cikolata Liste icerisinde mevcut\n"]}]},{"cell_type":"code","source":["#Matematiksel Toplama İşlemi\n","def toplama(a, b):\n","    return a+b\n","sonuc=toplama(5, 3)\n","print(f\"Toplama sonucu:{sonuc}\")\n","print(\"Toplama sonucu:\",sonuc)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G2rkkDnkopkj","executionInfo":{"status":"ok","timestamp":1724660155878,"user_tz":-180,"elapsed":323,"user":{"displayName":"ROJG�L ACIBUCA","userId":"11810552767955716186"}},"outputId":"947e49a4-9bce-49f5-8118-a89c3e6b7c9d"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["Toplama sonucu:8\n","Toplama sonucu: 8\n"]}]},{"cell_type":"code","source":["#Liste Elamanlarını Toplama\n","sayilar=[1,2,3,4,5]\n","def liste_toplam(liste):\n","  toplam=0\n","  for eleman in liste:\n","    toplam+=eleman\n","    return toplam\n","#Fonksiyonu çağırarak kullanma\n","sonuc = liste_toplam(sayilar)\n","print(\"Toplama sonucu:\",sonuc)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C5PftQm-wa4J","executionInfo":{"status":"ok","timestamp":1724660641912,"user_tz":-180,"elapsed":294,"user":{"displayName":"ROJG�L ACIBUCA","userId":"11810552767955716186"}},"outputId":"b872f167-0ea9-4b32-f09a-c1ff7452a2e8"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["Toplama sonucu: 1\n"]}]},{"cell_type":"code","source":["#Fibonnacci Dizisi Hesaplama\n","def Fibonnacci(n):\n","  if n<=0:\n","    return \"Gecersiz giris\"\n","  elif n==1:\n","    return 0\n","  elif n ==2:\n","    return 1\n","  else:\n","    return Fibonnacci(n-1)+ Fibonnacci(n-2)\n","#Fonksiyonu çağırarak kullanma\n","n=7\n","sonuc=Fibonnacci(n)\n","print(f\"Fibonacci dizisinin{n}. elemanı:{sonuc}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"22iYFdScyPXc","executionInfo":{"status":"ok","timestamp":1724661016514,"user_tz":-180,"elapsed":307,"user":{"displayName":"ROJG�L ACIBUCA","userId":"11810552767955716186"}},"outputId":"5109d374-fa76-4dac-d11a-b6a081b6652e"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["Fibonacci dizisinin7. elemanı:8\n"]}]},{"cell_type":"code","source":["from re import A\n","#Ebob ve Ekok Bulma\n","def ebob(a,b):\n","    while b:\n","      a, b = b, a % b\n","    return a\n","def ekok(a,b):\n","    return a*b // ebob(a,b)\n","#Kullanıcıdan iki sayı al\n","Bir_Sayi= int(input(\"Birinci sayiyi girin:\"))\n","İki_sayi=int(input(\"İkinci sayiyi girin:\"))\n","#Ebob ve Ekok hesapla\n","ebob_sonuc= ebob(Bir_Sayi,İki_sayi)\n","ekok_sonuc=ekok(Bir_Sayi,İki_sayi)\n","#Sonuçları göster\n","print(\"Sayılarının Ebob'u:\", ebob_sonuc)\n","print(\"Sayıların Ekok'u:\", ekok_sonuc)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZGeCcNQ0zvvY","executionInfo":{"status":"ok","timestamp":1724662011671,"user_tz":-180,"elapsed":16254,"user":{"displayName":"ROJG�L ACIBUCA","userId":"11810552767955716186"}},"outputId":"6f158413-ef30-4599-c36e-dbf0ecab11cb"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["Birinci sayiyi girin:24\n","İkinci sayiyi girin:18\n","Sayılarının Ebob'u: 6\n","Sayıların Ekok'u: 72\n"]}]},{"cell_type":"code","source":["#Asal sayı kontrolü ve asal sayılar listesi\n","def asal_mi(sayi):\n","  if sayi<2:\n","    return False\n","  for i in range(2,int(sayi**0.5)+1):\n","      if sayi %i==0:\n","         return False\n","  return True\n","def asal_sayilar(aralik):\n","    asal_listesi=[]\n","    for sayi in range( 2,aralik+1):\n","        if asal_mi(sayi):\n","           asal_listesi.append(sayi)\n","    return asal_listesi\n","#Fonksiyonları çağırarak kullanma\n","aralik=50\n","sonuc=asal_sayilar(aralik)\n","print(\"1 ile\",aralik,\"arasindeki asal sayılar:\",sonuc)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FrgozeG93esf","executionInfo":{"status":"ok","timestamp":1724662507090,"user_tz":-180,"elapsed":302,"user":{"displayName":"ROJG�L ACIBUCA","userId":"11810552767955716186"}},"outputId":"46d75a96-8aad-4db1-cf73-59a1564d5af4"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["1 ile 50 arasindeki asal sayılar: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]\n"]}]},{"cell_type":"code","source":["buzdolabi = { # Buzdolabındaki meyveler ve miktarlarını tutan sözlük\n","    \"elma\": 5,    # 5 kilo elma\n","    \"muz\": 3,     # 3 kilo muz\n","    \"kiraz\": 2,   # 2 kilo kiraz\n","    \"hurma\": 4    # 4 kilo hurma\n","}\n","\n","def buzdolabi_durumu_yazdir(): # Mevcut buzdolabı durumunu yazdıran fonksiyon\n","    print(\"Buzdolabındaki meyve miktarları:\")\n","    for meyve, miktar in buzdolabi.items():\n","        print(f\"{meyve}: {miktar} kilo\")\n","    print(\"\\n\")\n","\n","\n","def meyve_tuket(meyve, miktar): # Meyveden belirtilen miktarı düşen fonksiyon\n","    if meyve in buzdolabi:\n","        if buzdolabi[meyve] >= miktar:\n","            buzdolabi[meyve] -= miktar\n","            print(f\"{miktar} kilo {meyve} tüketildi.\")\n","            if buzdolabi[meyve] == 0:\n","                print(f\"{meyve} kalmadı. {meyve} almalısın!\")\n","                yeni_miktar = float(input(f\"Kaç kilo {meyve} almak istersiniz?: \"))\n","                buzdolabi[meyve] = yeni_miktar\n","                print(f\"{meyve} buzdolabına {yeni_miktar} kilo olarak eklendi.\")\n","        else:\n","            print(f\"Buzdolabında yeterli {meyve} yok. Mevcut miktar: {buzdolabi[meyve]} kilo.\")\n","    else:\n","        print(f\"Buzdolabında {meyve} bulunmuyor.\")\n","\n","print(\"Buzdolabı Uygulaması\") # Uygulama başlangıc noktası\n","buzdolabi_durumu_yazdir()\n","\n","while True: #Ana döngü tanımlaması\n","    # Kullanıcıdan meyve ve miktar bilgisi alma\n","    meyve = input(\"Hangi meyveyi tüketmek istersiniz? (Çıkmak için 'exit' yazın): \").lower()\n","\n","    if meyve == 'exit':\n","        print(\"Uygulama sonlandırılıyor.\")\n","        break\n","\n","    miktar = float(input(f\"Kaç kilo {meyve} tüketmek istersiniz?: \"))\n","\n","    meyve_tuket(meyve, miktar)     # Meyve tüketme işlemi\n","\n","    buzdolabi_durumu_yazdir()  # Güncellenmiş buzdolabı durumunu yazdırma"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6yeIg72-BU2i","executionInfo":{"status":"ok","timestamp":1724664735362,"user_tz":-180,"elapsed":118056,"user":{"displayName":"ROJG�L ACIBUCA","userId":"11810552767955716186"}},"outputId":"0697e4ab-2647-4baa-ae2b-6aadc65f144f"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["Buzdolabı Uygulaması\n","Buzdolabındaki meyve miktarları:\n","elma: 5 kilo\n","muz: 3 kilo\n","kiraz: 2 kilo\n","hurma: 4 kilo\n","\n","\n","Hangi meyveyi tüketmek istersiniz? (Çıkmak için 'exit' yazın): kiraz\n","Kaç kilo kiraz tüketmek istersiniz?: 3\n","Buzdolabında yeterli kiraz yok. Mevcut miktar: 2 kilo.\n","Buzdolabındaki meyve miktarları:\n","elma: 5 kilo\n","muz: 3 kilo\n","kiraz: 2 kilo\n","hurma: 4 kilo\n","\n","\n","Hangi meyveyi tüketmek istersiniz? (Çıkmak için 'exit' yazın): elma\n","Kaç kilo elma tüketmek istersiniz?: 2\n","2.0 kilo elma tüketildi.\n","Buzdolabındaki meyve miktarları:\n","elma: 3.0 kilo\n","muz: 3 kilo\n","kiraz: 2 kilo\n","hurma: 4 kilo\n","\n","\n","Hangi meyveyi tüketmek istersiniz? (Çıkmak için 'exit' yazın): muz\n","Kaç kilo muz tüketmek istersiniz?: 1\n","1.0 kilo muz tüketildi.\n","Buzdolabındaki meyve miktarları:\n","elma: 3.0 kilo\n","muz: 2.0 kilo\n","kiraz: 2 kilo\n","hurma: 4 kilo\n","\n","\n","Hangi meyveyi tüketmek istersiniz? (Çıkmak için 'exit' yazın): hurma\n","Kaç kilo hurma tüketmek istersiniz?: 0\n","0.0 kilo hurma tüketildi.\n","Buzdolabındaki meyve miktarları:\n","elma: 3.0 kilo\n","muz: 2.0 kilo\n","kiraz: 2 kilo\n","hurma: 4.0 kilo\n","\n","\n","Hangi meyveyi tüketmek istersiniz? (Çıkmak için 'exit' yazın): exit\n","Uygulama sonlandırılıyor.\n"]}]},{"cell_type":"code","source":["# Diyet listesindeki besinler ve kalorilerini tutan sözlük (Adet başına kalori)\n","diyet_listesi = {\n","    \"elma\": {\"miktar\": 5, \"kalori\": 52},    # 1 adet elma: 52 kalori\n","    \"muz\": {\"miktar\": 3, \"kalori\": 89},     # 1 adet muz: 89 kalori\n","    \"kiraz\": {\"miktar\": 2, \"kalori\": 50},   # 1 adet kiraz: 50 kalori\n","    \"hurma\": {\"miktar\": 4, \"kalori\": 282}   # 1 adet hurma: 282 kalori\n","}\n","\n","# Mevcut diyet listesini yazdıran fonksiyon\n","def diyet_listesi_yazdir():\n","    print(\"Diyet listesindeki besin miktarları ve kalorileri:\")\n","    for besin, bilgi in diyet_listesi.items():\n","        print(f\"{besin}: {bilgi['miktar']} Adet, Toplam Kalori: {bilgi['miktar'] * bilgi['kalori']} kalori\")\n","    print(\"\\n\")\n","\n","# Besinden belirtilen miktarı düşen ve kalori hesaplayan fonksiyon\n","def besin_tuket(besin, miktar):\n","    if besin in diyet_listesi:\n","        if diyet_listesi[besin][\"miktar\"] >= miktar:\n","            diyet_listesi[besin][\"miktar\"] -= miktar\n","            tuketilen_kalori = miktar * diyet_listesi[besin][\"kalori\"]\n","            print(f\"{miktar} kilo {besin} tüketildi. Alınan kalori: {tuketilen_kalori} kalori.\")\n","            if diyet_listesi[besin][\"miktar\"] == 0:\n","                print(f\"{besin} kalmadı. {besin} almalısın!\")\n","                yeni_miktar = float(input(f\"Kaç kilo {besin} almak istersiniz?: \"))\n","                diyet_listesi[besin][\"miktar\"] = yeni_miktar\n","                print(f\"{besin} diyet listesine {yeni_miktar} kilo olarak eklendi.\")\n","        else:\n","            print(f\"Diyet listesinde yeterli {besin} yok. Mevcut miktar: {diyet_listesi[besin]['miktar']} kilo.\")\n","    else:\n","        print(f\"Diyet listesinde {besin} bulunmuyor.\")\n","\n","print(\"Diyet Uygulaması\") # Uygulama başlangıcı\n","diyet_listesi_yazdir()\n","\n","while True:     # Kullanıcıdan besin ve miktar bilgisi alma\n","\n","    besin = input(\"Hangi besini tüketmek istersiniz? (Çıkmak için 'exit' yazın): \").lower()\n","\n","    if besin == 'exit':\n","        print(\"Uygulama sonlandırılıyor.\")\n","        break\n","\n","    miktar = float(input(f\"Kaç kilo {besin} tüketmek istersiniz?: \"))\n","\n","    besin_tuket(besin, miktar)     # Besin tüketme işlemi\n","\n","    diyet_listesi_yazdir()     # Güncellenmiş diyet listesini yazdırma\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oiL02Gz4BuS7","executionInfo":{"status":"ok","timestamp":1724664753891,"user_tz":-180,"elapsed":6541,"user":{"displayName":"ROJG�L ACIBUCA","userId":"11810552767955716186"}},"outputId":"650e30e9-ea6b-42af-c682-7e674dbd8e98"},"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["Diyet Uygulaması\n","Diyet listesindeki besin miktarları ve kalorileri:\n","elma: 5 Adet, Toplam Kalori: 260 kalori\n","muz: 3 Adet, Toplam Kalori: 267 kalori\n","kiraz: 2 Adet, Toplam Kalori: 100 kalori\n","hurma: 4 Adet, Toplam Kalori: 1128 kalori\n","\n","\n","Hangi besini tüketmek istersiniz? (Çıkmak için 'exit' yazın): exit\n","Uygulama sonlandırılıyor.\n"]}]}]}